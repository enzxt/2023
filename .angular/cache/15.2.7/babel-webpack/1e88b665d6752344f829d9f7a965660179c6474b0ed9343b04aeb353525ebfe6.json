{"ast":null,"code":"import exampledata from '../../data/sample-music-data.json';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MusicServiceService {\n  constructor(http) {\n    this.http = http;\n    this.albums = exampledata; // Array to hold albums\n    this.host = \"http://localhost:5000\";\n  }\n  getArtists(callback) {\n    this.http.get(this.host + \"/artists\").subscribe(artists => {\n      callback(artists);\n    });\n  }\n  getAlbums(callback) {\n    this.http.get(this.host + \"/albums\").subscribe(albums => {\n      callback(albums);\n    });\n  }\n  getAlbumsOfArtist(callback, artistName) {\n    this.http.get(this.host + \"/albums/\" + artistName).subscribe(albums => {\n      callback(albums);\n    });\n  }\n  createAlbum(album, callback) {\n    this.http.post(this.host + \"/albums/\", album).subscribe(data => {\n      callback();\n    });\n  }\n  updateAlbum(album, callback) {\n    this.http.put(this.host + \"/albums/\", album).subscribe(data => {\n      callback();\n    });\n  }\n  deleteAlbum(id, callback) {\n    this.http.delete(this.host + \"/albums/\" + id).subscribe(data => {\n      callback();\n    });\n  }\n  getAlbumById(id, callback) {\n    this.http.get(this.host + \"/albums?albumId=\" + id).subscribe(albums => {\n      callback(albums);\n    });\n  }\n}\nMusicServiceService.ɵfac = function MusicServiceService_Factory(t) {\n  return new (t || MusicServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\nMusicServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MusicServiceService,\n  factory: MusicServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,OAAOA,WAAW,MAAM,mCAAmC;;;AAO3D,OAAM,MAAOC,mBAAmB;EAI/BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHxB,WAAM,GAAYH,WAAW,CAAC,CAAC;IACvB,SAAI,GAAG,uBAAuB;EAGtC;EAEOI,UAAU,CAACC,QAAoC;IACnD,IAAI,CAACF,IAAI,CAACG,GAAG,CAAW,IAAI,CAACC,IAAI,GAAG,UAAU,CAAC,CAC7CC,SAAS,CAAEC,OAAiB,IAAI;MAC9BJ,QAAQ,CAACI,OAAO,CAAC;IACnB,CAAC,CAAC;EACN;EAEOC,SAAS,CAACL,QAAiC;IAChD,IAAI,CAACF,IAAI,CAACG,GAAG,CAAU,IAAI,CAACC,IAAI,GAAG,SAAS,CAAC,CAC3CC,SAAS,CAAEG,MAAe,IAAI;MAC5BN,QAAQ,CAACM,MAAM,CAAC;IAClB,CAAC,CAAC;EACN;EAEOC,iBAAiB,CAACP,QAAkC,EAAEQ,UAAkB;IAC7E,IAAI,CAACV,IAAI,CAACG,GAAG,CAAU,IAAI,CAACC,IAAI,GAAG,UAAU,GAAGM,UAAU,CAAC,CAC3DL,SAAS,CAAEG,MAAe,IAAI;MAC5BN,QAAQ,CAACM,MAAM,CAAC;IAClB,CAAC,CAAC;EACJ;EAEOG,WAAW,CAACC,KAAY,EAAEV,QAAmB;IAClD,IAAI,CAACF,IAAI,CAACa,IAAI,CAAU,IAAI,CAACT,IAAI,GAAG,UAAU,EAAEQ,KAAK,CAAC,CACtDP,SAAS,CAAES,IAAI,IAAI;MACjBZ,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ;EAEOa,WAAW,CAACH,KAAY,EAAEV,QAAmB;IAClD,IAAI,CAACF,IAAI,CAACgB,GAAG,CAAU,IAAI,CAACZ,IAAI,GAAG,UAAU,EAAEQ,KAAK,CAAC,CACrDP,SAAS,CAAES,IAAI,IAAI;MACjBZ,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ;EAEOe,WAAW,CAACC,EAAU,EAAEhB,QAAmB;IAChD,IAAI,CAACF,IAAI,CAACmB,MAAM,CAAC,IAAI,CAACf,IAAI,GAAG,UAAU,GAAGc,EAAE,CAAC,CAC7Cb,SAAS,CAAES,IAAI,IAAI;MACjBZ,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ;EAEOkB,YAAY,CAACF,EAAU,EAAEhB,QAAiC;IAC/D,IAAI,CAACF,IAAI,CAACG,GAAG,CAAU,IAAI,CAACC,IAAI,GAAG,kBAAkB,GAAGc,EAAE,CAAC,CAC3Db,SAAS,CAAEG,MAAe,IAAG;MAC3BN,QAAQ,CAACM,MAAM,CAAC;IAClB,CAAC,CAAC;EACJ;;AAtDWV,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;SAAnBA,mBAAmB;EAAAuB,SAAnBvB,mBAAmB;EAAAwB,YADN;AAAM","names":["exampledata","MusicServiceService","constructor","http","getArtists","callback","get","host","subscribe","artists","getAlbums","albums","getAlbumsOfArtist","artistName","createAlbum","album","post","data","updateAlbum","put","deleteAlbum","id","delete","getAlbumById","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\enzot\\UpdatedMusicAPI\\2023\\src\\app\\service\\music-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport exampledata from '../../data/sample-music-data.json';\n\nimport { Album } from '../models/Album';\nimport { Artist } from '../models/Artist';\nimport { Track } from '../models/Track';\n\n@Injectable({ providedIn: 'root' })\nexport class MusicServiceService {\n\talbums: Album[] = exampledata; // Array to hold albums\n\tprivate host = \"http://localhost:5000\";\n\n\tconstructor(private http: HttpClient) {\n\t}\n\n\tpublic getArtists(callback: (artists: Artist[])=> void): void {\n    this.http.get<Artist[]>(this.host + \"/artists\").\n      subscribe((artists: Artist[]) =>{\n        callback(artists);\n      });\n  }\n\n  public getAlbums(callback: (alums: Album[])=> void): void  {\n    this.http.get<Album[]>(this.host + \"/albums\").\n      subscribe((albums: Album[]) =>{\n        callback(albums);\n      });\n  }\n\n  public getAlbumsOfArtist(callback: (albums: Album[])=> void, artistName: String): void {\n    this.http.get<Album[]>(this.host + \"/albums/\" + artistName).\n    subscribe((albums: Album[]) =>{\n      callback(albums);\n    });\n  }\n\n  public createAlbum(album: Album, callback: ()=> void): void {\n    this.http.post<Album[]>(this.host + \"/albums/\", album).\n    subscribe((data) =>{\n      callback();\n    });\n  }\n\n  public updateAlbum(album: Album, callback: ()=> void): void {\n    this.http.put<Album[]>(this.host + \"/albums/\", album).\n    subscribe((data) =>{\n      callback();\n    });\n  }\n\n  public deleteAlbum(id: number, callback: ()=> void): void {\n    this.http.delete(this.host + \"/albums/\" + id).\n    subscribe((data) =>{\n      callback();\n    });\n  }\n\n  public getAlbumById(id: number, callback: (albums: Album[])=>void){\n    this.http.get<Album[]>(this.host + \"/albums?albumId=\" + id).\n    subscribe((albums: Album[])=>{\n      callback(albums);\n    });\n  }\n  \n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}